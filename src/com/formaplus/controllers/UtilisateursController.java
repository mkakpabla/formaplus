package com.formaplus.controllers;

import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.ButtonType;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;

import java.net.URL;
import java.util.ResourceBundle;

import com.formaplus.dao.models.Utilisateur;
import com.formaplus.dao.repositories.RepositoryFactory;
import com.formaplus.dao.repositories.UtilisateurRepository;
import com.formaplus.utils.AlertMessage;
import com.formaplus.utils.LoadView;
import com.formaplus.utils.Reporting;

import javafx.application.Platform;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.input.MouseEvent;
import javafx.stage.Stage;
import javafx.scene.input.KeyEvent;
import javafx.scene.control.TableView;

import javafx.scene.control.TableColumn;

public class UtilisateursController  implements Initializable {
	@FXML
	private TableView<Utilisateur> tblListeUtilisateurs;
	@FXML
	private TableColumn<Utilisateur, Integer> tblClnId;
	@FXML
	private TableColumn<Utilisateur, String> tblClnName;
	@FXML
	private TableColumn<Utilisateur, String> tblClnLogin;
	
	@FXML
    private TableColumn<Utilisateur, String> tblClnPassword;
	
	@FXML
	private TableColumn<Utilisateur, String> columnRole;
	
	@FXML
	private Button btnNew;
	@FXML
	private TextField txtSearch;
	@FXML
	private Button btnModifier;
	@FXML
	private Button btnSupprimer;
	
	@FXML
    private Button printButton;
	
	private ObservableList<Utilisateur> uListe;
	
	private UtilisateurRepository repository = new UtilisateurRepository();
	
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		initTableView();
		
	}

	// Event Listener on TableView[#tblListeUtilisateurs].onMouseClicked
	@FXML
	public void handleTableSelectedItemChanged(MouseEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#btnNew].onAction
	@FXML
	public void handleNewUtilisateur(ActionEvent event) {
		Stage modalStage = LoadView.getModalStage(btnNew, "FormUtilisateurs", "Ajouter un utilisateur");
		modalStage.setOnCloseRequest(evt ->loadData());
		modalStage.showAndWait();
		
	}
	// Event Listener on TextField[#txtSearch].onInputMethodTextChanged
	@FXML
	public void handleSearch(KeyEvent  event) {
		if(!txtSearch.getText().equals("")) {
			tblListeUtilisateurs.setItems(RepositoryFactory.getUtilisateurRepository().search(txtSearch.getText()));
		} else {
			this.loadData();
		}
	}
	
	@FXML
    public void handleSupprimerUtilisateur(ActionEvent event) {
		Utilisateur u = tblListeUtilisateurs.getSelectionModel().getSelectedItem();
		
		if(u != null) {
			ButtonType result = AlertMessage.showConfirm("Suppression", "Voulez vous vraimment supprimer l'utilisateur");
			if(result == ButtonType.OK) {
				this.repository.Delete(u.getIdUtr());
				this.loadData();
			}
		} else {
			AlertMessage.showInformation("Information", "Veillez selectionner un utilisateur");
		}
		
    }
	
	@FXML
    public void handleModifierUtilisateur(ActionEvent event) {
		Utilisateur u = tblListeUtilisateurs.getSelectionModel().getSelectedItem();
		if(u != null) {
			Stage modalStage = LoadView.getModalStage(btnModifier, "FormUtilisateurs", u, "Editer: " + u.getNomCompUtr());
			modalStage.setOnCloseRequest(evt ->loadData());
			modalStage.showAndWait();
		}else {
			AlertMessage.showInformation("Information", "Veillez selectionner un utilisateur");
		}
		
    }
	
	@FXML
    public void handlePrintButton(ActionEvent event) {
		Reporting.showReport("UsersList", "list_users", tblListeUtilisateurs.getItems());
    }
	
	public void loadData() {
		uListe = FXCollections.observableArrayList(this.repository.GetAll());
		tblListeUtilisateurs.setItems(uListe);
	}
	
	public void initTableView() {
		tblClnId.setCellValueFactory(new PropertyValueFactory<>("idUtr"));
		tblClnLogin.setCellValueFactory(new PropertyValueFactory<>("loginUtr"));
		tblClnName.setCellValueFactory(new PropertyValueFactory<>("nomCompUtr"));
		tblClnPassword.setCellValueFactory(new PropertyValueFactory<>("mdpUtr"));
		columnRole.setCellValueFactory(new PropertyValueFactory<>("roleUtr"));
		//tblClnName.setCellValueFactory(cellData -> cellData.getValue().getNomCompUtr());
		/*
		Task<Object> task = new Task<Object>() {

			@Override
			protected Object call() throws Exception {
				Platform.runLater(() -> {
	            	UtilisateurRepository repo = new UtilisateurRepository();
					uListe = FXCollections.observableArrayList(repo.GetAll());
					tblListeUtilisateurs.setItems(uListe);
	            });
				return null;
			}
		};
		
		ProgressDialog ps = new ProgressDialog(task);
		ps.show();
		
		Thread t1 = new Thread(task);
		t1.setDaemon(true);
		t1.start();
		*/
		
		new Thread(() -> {
            Platform.runLater(() -> {
            	loadData();
            });
        }).start();
	}
	
}
